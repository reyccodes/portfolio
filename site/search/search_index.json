{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])"},"docs":[{"location":"","text":"Hi! I'm Shreya Chaudhary This website is currently under development ! Expect for some major changes to occur within the new few hours and days ! I am currently in the job market, seeking full-time positions in software engineering and algorithms engineering. If you think I could be a good fit, please reach out ! Welcome to my website! It's great to have you! Want a summary? Check out my About Me Check out the tabs for my experience in particular domains! My biggest interests is MLSys or the intersection of machine learning with systems ! If you'd like to reach out about anything at all, feel free to email me at genericp3rson [at] duck [dot] com ! Project Gallery Here are some fun photos of projects I've worked on! Hover over the image to get a brief description and click the image to learn more!","title":"Home"},{"location":"#hi-im-shreya-chaudhary","text":"This website is currently under development ! Expect for some major changes to occur within the new few hours and days ! I am currently in the job market, seeking full-time positions in software engineering and algorithms engineering. If you think I could be a good fit, please reach out ! Welcome to my website! It's great to have you! Want a summary? Check out my About Me Check out the tabs for my experience in particular domains! My biggest interests is MLSys or the intersection of machine learning with systems ! If you'd like to reach out about anything at all, feel free to email me at genericp3rson [at] duck [dot] com !","title":"Hi! I'm Shreya Chaudhary"},{"location":"#project-gallery","text":"Here are some fun photos of projects I've worked on! Hover over the image to get a brief description and click the image to learn more!","title":"Project Gallery"},{"location":"about/","text":"About Shreya Chaudhary This website is currently under development! Expect for some major changes to occur within the new few hours and days! I am currently in the job market, seeking full-time positions in software engineering and algorithms engineering. If you think I could be a good fit, please reach out ! Hello there! I'm Shreya, a master's student at MIT studying Computer Science and Engineering! I'm still exploring my interests, but I find particular joy in high-performance computing! Below is roughly what you should know about me! You can also check out the tabs to get a thorough runthrough of my interests and work. I would say my primary interests are in performance/systems and machine learning (specifically the intersection of the two!) Projects My most recent open-source project is maintaining torchquantum \u2014feel free to reach out with any questions about the library! I also work on several other projects which aren't open-source (yet!) Check out below for a snapshot of some open-source projects I'm particularly proud of! Favorite Open-Source Projects Worked on! Project Description torchquantum PyTorch-based quantum machine learning library! ciphered-inference-accelerator FPGA accelerator for neural network inference with fully homomorphic encryption! gmat-cli cli to rapidly simulate satellite megaconstellations in GMAT! OrderBot robotics manipulation pipeline that autonomously prepares food from an order! private-lm-interactions proof-of-concept post-quantum secure language model interactions! [WIP] Cool Previous Open-Source Projects! Project Description kitchen-assets , robocasa-drake Port of robocasa that can be modeled in Drake AGI House Website Built backend + internal high-performance search using RAG Tigergraph.js [3rd Graphathon '20] Node.js TigerGraph wrapper to easily build full-stack applications with TigerGraph TigerGo Golang TigerGraph wrapper TigerGraph Cosmos Dashboard Dynamic GPU-Accelerated TigerGraph Data Visualization Dashboard BellBot Discord bot that simulated the school bells system TigerWikiSearch Wikipedia search using graph databases EyeCanCode [1st COVID Hacks '20] Platform to teach visually-impaired students how to code AsthmaAlert [1st TeenHacksTX '20] App to alert asthmatics when they are in a potentially dangerous area alz.vision [Track Winner, Global Development Challenge '20], dement.ai [Track Winner, World Hack Day '20] App to determine signs of memory loss for more accurate and informed Alzheimer's and dementia diagnosis gmat-scripting Library to rapidly prototype NASA GMAT files Hydrant , hydrant.mit.edu MIT class planner CosmosGraph Integrations Integrations for CosmosGraph Data Visualizer wide-tim Discord verification bot for MIT Discord servers ICCAD '23 Submission [1st ICCAD Quantum Drug Discovery Challenge '23] Quantum drug discovery challenge submission Custom-Made Tools I Regularly Use Someday I'd like all my tools to be custom-made! For now though, here's my growing list of custom-built tools I regularly use! Tool Description jankterm my little terminal emulator! not 100% ready yet but currently in use! built with love and vim keybindings! recovercli a little CLI to help me retrieve recovery codes! Contact Feel free to reach out at genericp3rson [at] duck [dot] com ! Other Things About Me! My Developer Environment Operating System : My primary operating system is Ubuntu! My Stack Primary Programming Language : I primarily work in C, C++, and Python. Recently, I've been using a lot of Rust. Data Science Stack : I tend to use a lot of Python, R, and occassionally Julia and MATLAB. I use a ton of PyTorch and ocassionally Tensorflow. Data Visualization : Data visualization is super important for presenting your work, and I've explored several different libraries. For R, I primarily use ggplot2. In Python, for simple plots, I use Matplotlib or Plotly; for dashboards, I use Plotly Dash or Streamlit. Graph Technology : I've been working with graphs since high school. I worked for TigerGraph for two years and used it for side projects. For graph machine learning, I primarily use Pytorch-Geometric and occassionally DGL. Natural Language Processing : I like spaCy 's models a lot. I also have used NLTK for more traditional NLP work. Web Dev Stack : I used to work on a ton of web development and now only occassionally help out with web dev projects. During web development, I used FastAPI for leverage a Python backend, and if Python wasn't necessary, I created a Node.js backend with either Express or from scratch. My frontend was either pure HTML/CSS, HTML/CSS with Bootstrap, React/React Native, or Flutter. (I've also dabbled in a handful of other frameworks.) For the database, I used MongoDB, Firebase, and TigerGraph. Summary of Experience I previously worked on Artephi Computing where I worked on benchmarking and profiling our quantum-inspired optimization algorithms written in Jax. My work both expanded the codebase and identified and addressed bottlenecks (which led to a 10x speedup across some benchmarks!) In addition, I have worked at AGI House and Infinirate. In both of these startups, I worked on developing AI tools! My work at AGI House had a full-stack focus with me developing the backend for their events webpage along with internal AI-tools. In that internship, I learned how to deploy AI applications with a focus on accuracy and performance. My work at Infinirate had a systems focus where I rapidly developed many AI prototypes and infrastructure. Before these, I worked at TigerGraph where I created developer tools for the community. Another super important aspect of my life was all the work I've done in academia! I was the core developer of TorchQuantum (now with over 1,500 stars!) and I worked to productionize the library. I've also worked on bioinformatics machine learning models, satellite modelling, and so much more! Check out the projects above and the tabs to get a taste of my work! I eventually found that I really enjoy algorithm engineering and working on high-performance computing tasks. I'm currently seeking roles in software engineering! I hope that the work I do can reach people!","title":"About Me"},{"location":"about/#about-shreya-chaudhary","text":"This website is currently under development! Expect for some major changes to occur within the new few hours and days! I am currently in the job market, seeking full-time positions in software engineering and algorithms engineering. If you think I could be a good fit, please reach out ! Hello there! I'm Shreya, a master's student at MIT studying Computer Science and Engineering! I'm still exploring my interests, but I find particular joy in high-performance computing! Below is roughly what you should know about me! You can also check out the tabs to get a thorough runthrough of my interests and work. I would say my primary interests are in performance/systems and machine learning (specifically the intersection of the two!)","title":"About Shreya Chaudhary"},{"location":"about/#projects","text":"My most recent open-source project is maintaining torchquantum \u2014feel free to reach out with any questions about the library! I also work on several other projects which aren't open-source (yet!) Check out below for a snapshot of some open-source projects I'm particularly proud of!","title":"Projects"},{"location":"about/#favorite-open-source-projects-worked-on","text":"Project Description torchquantum PyTorch-based quantum machine learning library! ciphered-inference-accelerator FPGA accelerator for neural network inference with fully homomorphic encryption! gmat-cli cli to rapidly simulate satellite megaconstellations in GMAT! OrderBot robotics manipulation pipeline that autonomously prepares food from an order! private-lm-interactions proof-of-concept post-quantum secure language model interactions!","title":"Favorite Open-Source Projects Worked on!"},{"location":"about/#wip-cool-previous-open-source-projects","text":"Project Description kitchen-assets , robocasa-drake Port of robocasa that can be modeled in Drake AGI House Website Built backend + internal high-performance search using RAG Tigergraph.js [3rd Graphathon '20] Node.js TigerGraph wrapper to easily build full-stack applications with TigerGraph TigerGo Golang TigerGraph wrapper TigerGraph Cosmos Dashboard Dynamic GPU-Accelerated TigerGraph Data Visualization Dashboard BellBot Discord bot that simulated the school bells system TigerWikiSearch Wikipedia search using graph databases EyeCanCode [1st COVID Hacks '20] Platform to teach visually-impaired students how to code AsthmaAlert [1st TeenHacksTX '20] App to alert asthmatics when they are in a potentially dangerous area alz.vision [Track Winner, Global Development Challenge '20], dement.ai [Track Winner, World Hack Day '20] App to determine signs of memory loss for more accurate and informed Alzheimer's and dementia diagnosis gmat-scripting Library to rapidly prototype NASA GMAT files Hydrant , hydrant.mit.edu MIT class planner CosmosGraph Integrations Integrations for CosmosGraph Data Visualizer wide-tim Discord verification bot for MIT Discord servers ICCAD '23 Submission [1st ICCAD Quantum Drug Discovery Challenge '23] Quantum drug discovery challenge submission","title":"[WIP] Cool Previous Open-Source Projects!"},{"location":"about/#custom-made-tools-i-regularly-use","text":"Someday I'd like all my tools to be custom-made! For now though, here's my growing list of custom-built tools I regularly use! Tool Description jankterm my little terminal emulator! not 100% ready yet but currently in use! built with love and vim keybindings! recovercli a little CLI to help me retrieve recovery codes!","title":"Custom-Made Tools I Regularly Use"},{"location":"about/#contact","text":"Feel free to reach out at genericp3rson [at] duck [dot] com !","title":"Contact"},{"location":"about/#other-things-about-me","text":"My Developer Environment Operating System : My primary operating system is Ubuntu! My Stack Primary Programming Language : I primarily work in C, C++, and Python. Recently, I've been using a lot of Rust. Data Science Stack : I tend to use a lot of Python, R, and occassionally Julia and MATLAB. I use a ton of PyTorch and ocassionally Tensorflow. Data Visualization : Data visualization is super important for presenting your work, and I've explored several different libraries. For R, I primarily use ggplot2. In Python, for simple plots, I use Matplotlib or Plotly; for dashboards, I use Plotly Dash or Streamlit. Graph Technology : I've been working with graphs since high school. I worked for TigerGraph for two years and used it for side projects. For graph machine learning, I primarily use Pytorch-Geometric and occassionally DGL. Natural Language Processing : I like spaCy 's models a lot. I also have used NLTK for more traditional NLP work. Web Dev Stack : I used to work on a ton of web development and now only occassionally help out with web dev projects. During web development, I used FastAPI for leverage a Python backend, and if Python wasn't necessary, I created a Node.js backend with either Express or from scratch. My frontend was either pure HTML/CSS, HTML/CSS with Bootstrap, React/React Native, or Flutter. (I've also dabbled in a handful of other frameworks.) For the database, I used MongoDB, Firebase, and TigerGraph.","title":"Other Things About Me!"},{"location":"about/#summary-of-experience","text":"I previously worked on Artephi Computing where I worked on benchmarking and profiling our quantum-inspired optimization algorithms written in Jax. My work both expanded the codebase and identified and addressed bottlenecks (which led to a 10x speedup across some benchmarks!) In addition, I have worked at AGI House and Infinirate. In both of these startups, I worked on developing AI tools! My work at AGI House had a full-stack focus with me developing the backend for their events webpage along with internal AI-tools. In that internship, I learned how to deploy AI applications with a focus on accuracy and performance. My work at Infinirate had a systems focus where I rapidly developed many AI prototypes and infrastructure. Before these, I worked at TigerGraph where I created developer tools for the community. Another super important aspect of my life was all the work I've done in academia! I was the core developer of TorchQuantum (now with over 1,500 stars!) and I worked to productionize the library. I've also worked on bioinformatics machine learning models, satellite modelling, and so much more! Check out the projects above and the tabs to get a taste of my work! I eventually found that I really enjoy algorithm engineering and working on high-performance computing tasks. I'm currently seeking roles in software engineering! I hope that the work I do can reach people!","title":"Summary of Experience"},{"location":"class_projects/","text":"Class Projects! Throughout my classes, I've gotten the awesome opportunity to learn a ton of pretty interesting skills. Here's a collection of some projects I've worked on for my classes. (Note, by course policies, I cannot publically post most of the source code. Instead, I provided some write-ups on things I've learned for some of the projects!) 6.1810: Operating Systems Engineering I learned a ton in this class about, well, operating systems! Specifically, I've grown more familiar with practical skills, like more familiarity with how to work with memory in C and debugging with gdb, and learned more about the inner workings of Linux. The class primarily consisted of adding specific features to xv6, a bare-bones operating system. Throughout the class, I think I've managed to touch every file in xv6 and really get familiar with how an OS works which is what I primarily wanted to get out of the class. My aspiration is to build my own operation system someday, though now I think I have a much better idea of how many components would go into that! Copy-on-Write An oddly finnicky aspect to add. The key idea of copy-on-write is that when creating a fork, often we don't need all of the memory, especially since we often have a fork() followed by an exec() which will override all the files anyways. Instead, we can lazily allocate physical memory as needed. Some key components that went into the lab was (1) moving around the allocation logic, (2) keeping track of how many things were pointing to a VA to decide when to free it, and (3) making sure all other errors still returned. 6.1010: Fundamentals of Programming Overall, this class was pretty chill with labs usually taking me the afternoon to complete. Here are some of my favorite labs. LISP Interpreter This was the capstone lab and quite fun. We were able to build an interpreter for LISP in Python. It was cool to be able to apply what we were studying throughout the term\u2014the inner workings of a programming language\u2014then create a pretty advanced recursive strategy to implement it! N-D Mines A fun recursive lab which required implementing the mines game in n-d.","title":"Class Projects"},{"location":"class_projects/#class-projects","text":"Throughout my classes, I've gotten the awesome opportunity to learn a ton of pretty interesting skills. Here's a collection of some projects I've worked on for my classes. (Note, by course policies, I cannot publically post most of the source code. Instead, I provided some write-ups on things I've learned for some of the projects!)","title":"Class Projects!"},{"location":"class_projects/#61810-operating-systems-engineering","text":"I learned a ton in this class about, well, operating systems! Specifically, I've grown more familiar with practical skills, like more familiarity with how to work with memory in C and debugging with gdb, and learned more about the inner workings of Linux. The class primarily consisted of adding specific features to xv6, a bare-bones operating system. Throughout the class, I think I've managed to touch every file in xv6 and really get familiar with how an OS works which is what I primarily wanted to get out of the class. My aspiration is to build my own operation system someday, though now I think I have a much better idea of how many components would go into that!","title":"6.1810: Operating Systems Engineering"},{"location":"class_projects/#copy-on-write","text":"An oddly finnicky aspect to add. The key idea of copy-on-write is that when creating a fork, often we don't need all of the memory, especially since we often have a fork() followed by an exec() which will override all the files anyways. Instead, we can lazily allocate physical memory as needed. Some key components that went into the lab was (1) moving around the allocation logic, (2) keeping track of how many things were pointing to a VA to decide when to free it, and (3) making sure all other errors still returned.","title":"Copy-on-Write"},{"location":"class_projects/#61010-fundamentals-of-programming","text":"Overall, this class was pretty chill with labs usually taking me the afternoon to complete. Here are some of my favorite labs.","title":"6.1010: Fundamentals of Programming"},{"location":"class_projects/#lisp-interpreter","text":"This was the capstone lab and quite fun. We were able to build an interpreter for LISP in Python. It was cool to be able to apply what we were studying throughout the term\u2014the inner workings of a programming language\u2014then create a pretty advanced recursive strategy to implement it!","title":"LISP Interpreter"},{"location":"class_projects/#n-d-mines","text":"A fun recursive lab which required implementing the mines game in n-d.","title":"N-D Mines"},{"location":"classes/","text":"My Current Coursework! Freshman Year Fall Math for Computer Science Introduction to C and Assembly Multivariate Calculus Physics I: Mechanics Introduction to Solid-State Chemistry IAP MASLab (worked on StaffBot + Simulation) Weblab Introduction to Quantum Computing Spring Computational Structures Introduction to Probability Introduction to Algorithms Circuits Introduction to Media Studies Sophomore Year Fall Design and Analysis of Algorithms Operating Systems Engineering Robotics Manipulation Introduction to Machine Learning Fundamentals of Programming Screenwriting IAP Chinese I MASLab (Actual Competition Year!) UPOP TTW Spring [Grad] Applied Cryptography [Grad] Advances in Computer Vision Elements of Software Construction Computer Systems Engineering Macroeconomics Medival Economics","title":"My Current Coursework!"},{"location":"classes/#my-current-coursework","text":"","title":"My Current Coursework!"},{"location":"classes/#freshman-year","text":"","title":"Freshman Year"},{"location":"classes/#fall","text":"Math for Computer Science Introduction to C and Assembly Multivariate Calculus Physics I: Mechanics Introduction to Solid-State Chemistry","title":"Fall"},{"location":"classes/#iap","text":"MASLab (worked on StaffBot + Simulation) Weblab Introduction to Quantum Computing","title":"IAP"},{"location":"classes/#spring","text":"Computational Structures Introduction to Probability Introduction to Algorithms Circuits Introduction to Media Studies","title":"Spring"},{"location":"classes/#sophomore-year","text":"","title":"Sophomore Year"},{"location":"classes/#fall_1","text":"Design and Analysis of Algorithms Operating Systems Engineering Robotics Manipulation Introduction to Machine Learning Fundamentals of Programming Screenwriting","title":"Fall"},{"location":"classes/#iap_1","text":"Chinese I MASLab (Actual Competition Year!) UPOP TTW","title":"IAP"},{"location":"classes/#spring_1","text":"[Grad] Applied Cryptography [Grad] Advances in Computer Vision Elements of Software Construction Computer Systems Engineering Macroeconomics Medival Economics","title":"Spring"},{"location":"ml/","text":"Machine Learning! This page is currently under development! Expect for some major changes to occur within the new few hours and days! I've been working on AI and ML since 2018 and programmed my first neural network from scratch in middle school! I have a number of research and industry experiences in AI/ML. I'm specifically very interested in efficient ML and looking at low-level software and hardware optimizations. Experiences Model-Based Embedded Robotics (2025) I created search-and-rescue multi-drone demonstrations! This used MAPF (with reinforcement learning) to plan drone trajectories. Infinirate (2025) I worked on rapidly developing AI prototypes and developing AI infrastructure! The startup is still in the stealth phase. Bioinformatics Lab (2022-2025) I worked on using and creating foundation models for predicting the functionality of ncexons. AGI House (2024) I worked on building efficient and accurate AI and ML algorithms and pipelines for internal stealth startups with a focus on RAG and CV, collaborating with startup founders in the area. My primary projects included building a performant search combining RAG and query search. I worked closely with building agentic AI frameworks! From this experience, I learned how to ship accurate and performant AI applications ! Multimodal AI Lab (2024) I worked on experiments to learn about different modality interact with each other to have a richer understanding of multimodal AI! TigerGraph (2020-2022) At TigerGraph, I worked on a number of cool projects involving NLP and knowledge graphs! Projects Core Developer of TorchQuantum [1.5k+ stars] I've worked on expanding and maintaining TorchQuantum , a GPU-accelerated PyTorch-based framework for quantum computing and simulation. I've worked on streamlining the review process for new PRs, solidifying the structure of the framework, and added several new gates. I also penned a new tutorial . AI Class Projects Project Description ciphered-inference-accelerator FPGA accelerator for neural network inference with fully homomorphic encryption! private-lm-interactions proof-of-concept post-quantum secure language model interactions! OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients.","title":"AI/ML"},{"location":"ml/#machine-learning","text":"This page is currently under development! Expect for some major changes to occur within the new few hours and days! I've been working on AI and ML since 2018 and programmed my first neural network from scratch in middle school! I have a number of research and industry experiences in AI/ML. I'm specifically very interested in efficient ML and looking at low-level software and hardware optimizations.","title":"Machine Learning!"},{"location":"ml/#experiences","text":"Model-Based Embedded Robotics (2025) I created search-and-rescue multi-drone demonstrations! This used MAPF (with reinforcement learning) to plan drone trajectories. Infinirate (2025) I worked on rapidly developing AI prototypes and developing AI infrastructure! The startup is still in the stealth phase. Bioinformatics Lab (2022-2025) I worked on using and creating foundation models for predicting the functionality of ncexons. AGI House (2024) I worked on building efficient and accurate AI and ML algorithms and pipelines for internal stealth startups with a focus on RAG and CV, collaborating with startup founders in the area. My primary projects included building a performant search combining RAG and query search. I worked closely with building agentic AI frameworks! From this experience, I learned how to ship accurate and performant AI applications ! Multimodal AI Lab (2024) I worked on experiments to learn about different modality interact with each other to have a richer understanding of multimodal AI! TigerGraph (2020-2022) At TigerGraph, I worked on a number of cool projects involving NLP and knowledge graphs!","title":"Experiences"},{"location":"ml/#projects","text":"Core Developer of TorchQuantum [1.5k+ stars] I've worked on expanding and maintaining TorchQuantum , a GPU-accelerated PyTorch-based framework for quantum computing and simulation. I've worked on streamlining the review process for new PRs, solidifying the structure of the framework, and added several new gates. I also penned a new tutorial . AI Class Projects Project Description ciphered-inference-accelerator FPGA accelerator for neural network inference with fully homomorphic encryption! private-lm-interactions proof-of-concept post-quantum secure language model interactions! OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients.","title":"Projects"},{"location":"perf/","text":"Performance and Systems! This page is currently under development! Expect for some major changes to occur within the new few hours and days! Junior year, I took performance engineering (6.106) and it was one of the coolest classes I've ever taken! Since then, I've fallen head-on in the performance engineering and systems hole. Experiences Compilers @ MIT I started working on sparse tensor compiler (Finch)! I worked on adding some features to the compiler such as new algorithms and internal functions. I'm now working on building infrastructure to build high-performance domain-specific languages in Python! Artephi Computing Inc. I worked on developing performant quantum-inspired algorithms in Jax! In total, I managed to get a 10x speedup on some of our benchmarks! Projects Finch.jl I added some features like a sparse depth-first search and degree centrality and added features like argmin, argmax, and dropdims. FS For my distributed final project, we did an exploration of different file systems, with our final file system with RDMA support (using Soft iWARP). Below is a picture of our setup -- using Ethernet, we could simulate RDMA so we were able to create an efficient file system between the desktop and the laptop shown! TinySAM For my TinyML final project, we benchmarked many segment-any models (SAM) and created quantized SAM models","title":"Systems and Performance"},{"location":"perf/#performance-and-systems","text":"This page is currently under development! Expect for some major changes to occur within the new few hours and days! Junior year, I took performance engineering (6.106) and it was one of the coolest classes I've ever taken! Since then, I've fallen head-on in the performance engineering and systems hole.","title":"Performance and Systems!"},{"location":"perf/#experiences","text":"Compilers @ MIT I started working on sparse tensor compiler (Finch)! I worked on adding some features to the compiler such as new algorithms and internal functions. I'm now working on building infrastructure to build high-performance domain-specific languages in Python! Artephi Computing Inc. I worked on developing performant quantum-inspired algorithms in Jax! In total, I managed to get a 10x speedup on some of our benchmarks!","title":"Experiences"},{"location":"perf/#projects","text":"Finch.jl I added some features like a sparse depth-first search and degree centrality and added features like argmin, argmax, and dropdims. FS For my distributed final project, we did an exploration of different file systems, with our final file system with RDMA support (using Soft iWARP). Below is a picture of our setup -- using Ethernet, we could simulate RDMA so we were able to create an efficient file system between the desktop and the laptop shown! TinySAM For my TinyML final project, we benchmarked many segment-any models (SAM) and created quantized SAM models","title":"Projects"},{"location":"projects/","text":"Projects (and Skills) There are a ton of things I'm interested in and I'm still exploring! Unfortunately, I can't open-source a lot of the work I'm doing right now, but here are some open-source or completed projects I've worked on! General Projects Personal Technical Blog https://shreya-chaudhary.medium.com/ I used to write blogs on concepts and projects I was working on, publishing with top data science publications like Towards Data Science, Geek Culture, DataDrivenInvestors, Dev Genius, and more! I even had a publication reach out to translate my article! Check it out to see a ton of my older projects! You'll notably find a ton of TigerGraph projects I worked on! Here are some pictures from those projects! DevPost https://devpost.com/GenericP3rson Several open-source full-stack applications in various areas of interest! Technical Projects A Suite of Differential Privacy Algorithms During IAP 2023, I helped develop a suite of differential privacy algorithms specifically for energy-related use cases. I used the Laplace Mechanism to add sufficient noise to both continuous and discrete data. Here's a gif of the algorithm in action, generating a synthetic dataset on some arbitrary distribution I created. You'll notice that at the beginning, the data is completely different from the original dataset; however, over time, it converges to roughly the ideal dataset with a certain amount of noise. Modelling 1000+ Satellites with GMAT Over the summer, I got to learn how to conduct orbit modelling and wrote a Python program to generate a script to feed into NASA's GMAT to simulate over 1,000 satellites in low-Earth orbit (LEO). This is simulating a Walker Constellation. OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients. Libraries TorchQuantum I've helped out with expanding and maintaining TorchQuantum , a GPU-accelerated PyTorch-based framework for quantum computing and simulation. I've worked on streamlining the review process for new PRs, solidifying the structure of the framework, and added several new gates. I also penned a new tutorial . TigerGraph-CosmoGraph Plugin I created the first plugin for the GPU-accelerated graph visualizer Cosmograph, allowing it to easily port in TigerGraph. You can check out the integration here . TigerGraph.js I developed a Node.js connector to ease the process for full-stack developers to use TigerGraph. (This project also managed to win 3rd place overall at the Graphathon challenge!) TigerGo When I began learning Golang, I created a TigerGraph wrapper in the language which I then used to create CLIs with Cobra and experimented with Golang's full-stack options. Check it out! Fun Generative Projects A DCGAN Birthday Card For a friend's birthday, I used Selenium to scrape a ton of birthday card images and trained a Deep Convolutional Generative Adversial Network to make a birthday card. The results weren't bad given the noise\u2014check it out! (The input images are on the left and the generated images are on the right.) Using Quantum Procedural Generation on Squirrels For our final project for introduction to quantum computing over IAP, my project partners and I used quantum procedural generation on squirrels. Check out this blog outlining what we did!","title":"Projects"},{"location":"projects/#projects-and-skills","text":"There are a ton of things I'm interested in and I'm still exploring! Unfortunately, I can't open-source a lot of the work I'm doing right now, but here are some open-source or completed projects I've worked on!","title":"Projects (and Skills)"},{"location":"projects/#general-projects","text":"Personal Technical Blog https://shreya-chaudhary.medium.com/ I used to write blogs on concepts and projects I was working on, publishing with top data science publications like Towards Data Science, Geek Culture, DataDrivenInvestors, Dev Genius, and more! I even had a publication reach out to translate my article! Check it out to see a ton of my older projects! You'll notably find a ton of TigerGraph projects I worked on! Here are some pictures from those projects! DevPost https://devpost.com/GenericP3rson Several open-source full-stack applications in various areas of interest!","title":"General Projects"},{"location":"projects/#technical-projects","text":"A Suite of Differential Privacy Algorithms During IAP 2023, I helped develop a suite of differential privacy algorithms specifically for energy-related use cases. I used the Laplace Mechanism to add sufficient noise to both continuous and discrete data. Here's a gif of the algorithm in action, generating a synthetic dataset on some arbitrary distribution I created. You'll notice that at the beginning, the data is completely different from the original dataset; however, over time, it converges to roughly the ideal dataset with a certain amount of noise. Modelling 1000+ Satellites with GMAT Over the summer, I got to learn how to conduct orbit modelling and wrote a Python program to generate a script to feed into NASA's GMAT to simulate over 1,000 satellites in low-Earth orbit (LEO). This is simulating a Walker Constellation. OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients.","title":"Technical Projects"},{"location":"projects/#libraries","text":"TorchQuantum I've helped out with expanding and maintaining TorchQuantum , a GPU-accelerated PyTorch-based framework for quantum computing and simulation. I've worked on streamlining the review process for new PRs, solidifying the structure of the framework, and added several new gates. I also penned a new tutorial . TigerGraph-CosmoGraph Plugin I created the first plugin for the GPU-accelerated graph visualizer Cosmograph, allowing it to easily port in TigerGraph. You can check out the integration here . TigerGraph.js I developed a Node.js connector to ease the process for full-stack developers to use TigerGraph. (This project also managed to win 3rd place overall at the Graphathon challenge!) TigerGo When I began learning Golang, I created a TigerGraph wrapper in the language which I then used to create CLIs with Cobra and experimented with Golang's full-stack options. Check it out!","title":"Libraries"},{"location":"projects/#fun-generative-projects","text":"A DCGAN Birthday Card For a friend's birthday, I used Selenium to scrape a ton of birthday card images and trained a Deep Convolutional Generative Adversial Network to make a birthday card. The results weren't bad given the noise\u2014check it out! (The input images are on the left and the generated images are on the right.) Using Quantum Procedural Generation on Squirrels For our final project for introduction to quantum computing over IAP, my project partners and I used quantum procedural generation on squirrels. Check out this blog outlining what we did!","title":"Fun Generative Projects"},{"location":"robotics/","text":"Robotics! This page is currently under development! Expect for some major changes to occur within the new few hours and days! Robotics is a super fascinating field to me, both for the algorithm rigor and the awesomeness of seeing your code work on a robot! Below are some neat projects I've gotten to work on! Experiences Robot Locomotion Lab I worked on porting high-resolution robocasa kitchen environments into Drake, specifically with an interest of running Spot in the environments. Model-Based Embedded Robotics Lab I worked on distributed and online algorithms for multi-drone search-and-rescue tasks! Haystack Observatory I worked on modelling megaconstellations with GMAT. Projects Modelling 1000+ Satellites with GMAT Over the summer, I got to learn how to conduct orbit modelling and wrote a Python program to generate a script to feed into NASA's GMAT to simulate over 1,000 satellites in low-Earth orbit (LEO). This is simulating a Walker Constellation. OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients. Robocasa in Drake I created a script to port RoboCasa kitchen environments into Drake's meshcat! Search-and-Rescue I created distributed, online multi-drone search-and-rescue demonstrations on Crazyflie hardware!","title":"Robotics"},{"location":"robotics/#robotics","text":"This page is currently under development! Expect for some major changes to occur within the new few hours and days! Robotics is a super fascinating field to me, both for the algorithm rigor and the awesomeness of seeing your code work on a robot! Below are some neat projects I've gotten to work on!","title":"Robotics!"},{"location":"robotics/#experiences","text":"Robot Locomotion Lab I worked on porting high-resolution robocasa kitchen environments into Drake, specifically with an interest of running Spot in the environments. Model-Based Embedded Robotics Lab I worked on distributed and online algorithms for multi-drone search-and-rescue tasks! Haystack Observatory I worked on modelling megaconstellations with GMAT.","title":"Experiences"},{"location":"robotics/#projects","text":"Modelling 1000+ Satellites with GMAT Over the summer, I got to learn how to conduct orbit modelling and wrote a Python program to generate a script to feed into NASA's GMAT to simulate over 1,000 satellites in low-Earth orbit (LEO). This is simulating a Walker Constellation. OrderBot For 6.421, I built a robot that could prepare foods from a human order given a list of random ingredients from a known set of ingredients. Robocasa in Drake I created a script to port RoboCasa kitchen environments into Drake's meshcat! Search-and-Rescue I created distributed, online multi-drone search-and-rescue demonstrations on Crazyflie hardware!","title":"Projects"},{"location":"swe/","text":"Misc. Software Experiences!","title":"Misc. Software Experiences!"},{"location":"swe/#misc-software-experiences","text":"","title":"Misc. Software Experiences!"},{"location":"blog/","text":"Blog","title":"Blog"},{"location":"blog/#blog","text":"","title":"Blog"}]}